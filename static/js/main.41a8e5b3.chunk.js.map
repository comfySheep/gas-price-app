{"version":3,"sources":["History.js","tools/constants.js","tools/request.js","tools/helpers.js","services/index.js","actions/constants.js","components/Loading/index.js","layouts/SearchLayout.js","actions/gasStationList.js","page/GasStationList/components/StationList/components/StationRow.js","page/GasStationList/components/StationList/index.js","page/GasStationList/index.js","page/GasStationDetail/index.js","actions/gasStationDetail.js","App.js","reducers/app.js","reducers/gasStationDetail.js","reducers/gasStationList.js","reducers/index.js","store.js","index.js"],"names":["createBrowserHistory","basename","key","name","request","options","method","params","url","headers","toLowerCase","axios","get","fetch","then","response","data","Promise","resolve","catch","error","reject","stationId","history","push","API_KEY","constants","DETAIL_ACTIONS","LIST_ACTIONS","APP_ACTIONS","Loading","id","SEARCH_SORT_OPTIONS","SEARCH_DISTANCE_OPTIONS","handleDisplaySearchStationList","SearchLayout","UNSAFE_componentWillMount","location","props","pathname","includes","handleSearchStations","handleUpdateSortBy","e","sortBy","target","value","setState","handleUpdateSearchDistance","searchDistance","navigator","geolocation","getCurrentPosition","handleGetGasStationList","position","getGasStationList","state","coords","latitude","longitude","toFixed","distance","fuelType","bind","loading","this","map","className","onClick","searchDistanceOption","children","Component","mapActionsToProps","dispatch","type","payload","getGasStationsService","res","JSON","parse","substring","indexOf","stations","gasStationList","err","connect","app","StationRow","gasStation","station","address","zip","reg_price","mid_price","pre_price","diesel_price","helpers","StationList","length","GasStationList","GasStationDetail","componentDidMount","match","handleGetGasStationDetail","getGasStationDetail","getGasStationDetailService","details","previousPrices","gasStationDetail","AppRoute","Page","page","Layout","layout","rest","render","App","exact","path","initialState","city","region","country","lat","lng","station_name","reg_date","mid_date","pre_date","diesel_date","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.41a8e5b3.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({ basename: \"\" });\n","export default {\n  API_KEY: \"rfej9napna.json\",\n  SEARCH_SORT_OPTIONS: [\n    { key: \"distance\", name: \"Distance\" },\n    { key: \"price\", name: \"Price\" }\n  ],\n  SEARCH_DISTANCE_OPTIONS: [1, 3, 5, 10, 50]\n};\n","import axios from \"axios\";\n\nconst fetch = options => {\n  const { method = \"get\", params, url, headers } = options;\n  switch (method.toLowerCase()) {\n    case \"get\":\n      return axios.get(url, { params, headers });\n    default:\n      return axios(options);\n  }\n};\n\nconst request = options => {\n  return fetch(options)\n    .then(response => {\n      const { data } = response;\n      return Promise.resolve(data);\n    })\n    .catch(error => {\n      const {\n        response: { data }\n      } = error;\n      return Promise.reject(data);\n    });\n};\n\nexport default request;\n","import history from \"History\";\n\nconst handleSelectStation = stationId => {\n  history.push(`/gas-price-app/station/${stationId}`);\n};\n\nconst handleDisplaySearchStationList = () => {\n  history.push(\"/gas-price-app\");\n};\n\nexport default { handleSelectStation, handleDisplaySearchStationList };\n","import { constants, request } from \"tools\";\n\nconst { API_KEY } = constants;\n\nexport function getGasStationsService(params) {\n  const { latitude, longitude, distance, fuelType, sortBy } = params;\n\n  return request({\n    url: `/stations/radius/${latitude}/${longitude}/${distance}/${fuelType}/${sortBy}/${API_KEY}`,\n    method: \"get\"\n  });\n}\n\nexport function getGasStationDetailService({ stationId }) {\n  return request({\n    url: `/stations/details/${stationId}/${API_KEY}`,\n    method: \"get\"\n  });\n}\n","const DETAIL_ACTIONS = {\n  UPDATE_GAS_STATION_DETAIL: \"UPDATE_GAS_STATION_DETAIL\"\n};\n\nconst LIST_ACTIONS = {\n  UPDATE_GAS_STATION_LIST: \"UPDATE_GAS_STATION_LIST\"\n};\n\nconst APP_ACTIONS = {\n  UPDATE_LOADING: \"UPDATE_LOADING\"\n};\n\nexport { DETAIL_ACTIONS, LIST_ACTIONS, APP_ACTIONS };\n","import React from \"react\";\n\nconst Loading = () => {\n  return <div id=\"loading\">Loading...</div>;\n};\n\nexport default Loading;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationList } from \"actions/gasStationList\";\nimport { constants, helpers } from \"tools\";\nimport { Loading } from \"components\";\n\nconst { SEARCH_SORT_OPTIONS, SEARCH_DISTANCE_OPTIONS } = constants;\nconst { handleDisplaySearchStationList } = helpers;\n\nclass SearchLayout extends Component {\n  constructor() {\n    super();\n\n    this.state = { sortBy: \"distance\", searchDistance: 1 };\n\n    this.handleUpdateSortBy = this.handleUpdateSortBy.bind(this);\n    this.handleUpdateSearchDistance = this.handleUpdateSearchDistance.bind(this);\n  }\n\n  UNSAFE_componentWillMount = () => {\n    const { location } = this.props;\n    const pathname = location ? location.pathname : \"\";\n\n    if (pathname.includes(\"station\")) return;\n\n    this.handleSearchStations();\n  };\n\n  handleUpdateSortBy = e => {\n    const sortBy = e.target.value;\n\n    this.setState({ sortBy });\n    this.handleSearchStations();\n  };\n\n  handleUpdateSearchDistance = e => {\n    const searchDistance = e.target.value;\n\n    this.setState({ searchDistance });\n    this.handleSearchStations();\n  };\n\n  handleSearchStations = () => {\n    navigator.geolocation.getCurrentPosition(this.handleGetGasStationList, () => {});\n  };\n\n  handleGetGasStationList = position => {\n    const { getGasStationList } = this.props;\n    const { sortBy, searchDistance } = this.state;\n    const { latitude, longitude } = (position && position.coords) || { latitude: 32.9596, longitude: -117.1578 };\n    const params = {\n      latitude: latitude.toFixed(3),\n      longitude: longitude.toFixed(3),\n      distance: searchDistance,\n      fuelType: \"reg\",\n      sortBy\n    };\n\n    getGasStationList(params);\n    handleDisplaySearchStationList();\n  };\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <Fragment>\n        <div id=\"search-layout\">\n          <div id=\"sort-buttons-container\">\n            <span>Sort By: </span>\n            {SEARCH_SORT_OPTIONS.map(({ key, name }) => (\n              <button className=\"btn\" key={`search-sort-option-${key}`} value={key} onClick={this.handleUpdateSortBy}>\n                {name}\n              </button>\n            ))}\n          </div>\n          <div id=\"distance-buttons-container\">\n            <span>Within: </span>\n            {SEARCH_DISTANCE_OPTIONS.map(searchDistanceOption => (\n              <button\n                className=\"btn\"\n                key={`search-distance-option-${searchDistanceOption}`}\n                value={searchDistanceOption}\n                onClick={this.handleUpdateSearchDistance}\n              >\n                {searchDistanceOption} {searchDistanceOption === 1 ? \"mile\" : \"miles\"}\n              </button>\n            ))}\n          </div>\n        </div>\n        {loading ? <Loading /> : null}\n        <div id=\"search-content-container\" className={`${loading ? \"hidden \" : \"\"}search-content-container`}>\n          {this.props.children}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ app }) => ({ ...app });\n\nconst mapActionsToProps = { getGasStationList };\n\nexport default connect(mapStatetoProps, mapActionsToProps)(SearchLayout);\n","import { getGasStationsService } from \"services\";\nimport { LIST_ACTIONS, APP_ACTIONS } from \"./constants\";\n\nconst getGasStationList = params => {\n  return dispatch => {\n    dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: true } });\n\n    getGasStationsService(params)\n      .then(res => {\n        if (typeof res !== \"object\") {\n          res = JSON.parse(res.substring(res.indexOf('{\"status\":{\"error\":')));\n        }\n\n        const { stations } = res;\n\n        dispatch({ type: LIST_ACTIONS.UPDATE_GAS_STATION_LIST, payload: { gasStationList: stations } });\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      })\n      .catch(err => {});\n  };\n};\n\nexport { getGasStationList };\n","import React from \"react\";\nimport { helpers } from \"tools\";\n\nconst StationRow = props => {\n  const { gasStation } = props;\n  const { id, station, address, zip, reg_price, mid_price, pre_price, diesel_price, distance } = gasStation;\n\n  return (\n    <div className=\"generic-row\" onClick={() => helpers.handleSelectStation(id)}>\n      <div className=\"station-title\">{station}</div>\n      <div className=\"station-address\">\n        {address}, {zip}\n      </div>\n      <div className=\"station-price station-reg-price\">Regular - {reg_price}</div>\n      <div className=\"station-price station-mid-price\">Medium - {mid_price}</div>\n      <div className=\"station-price station-pre-price\">Premium - {pre_price}</div>\n      <div className=\"station-price station-diesel-price\">Diesel - {diesel_price}</div>\n      <div className=\"station-distance\">Distance - {distance}</div>\n    </div>\n  );\n};\n\nexport default StationRow;\n","import React from \"react\";\nimport { StationRow } from \"./components\";\n\nconst StationList = props => {\n  const { gasStationList } = props;\n\n  if (gasStationList.length === 0) return \"There are no gas station near you...\";\n\n  return (\n    <div className=\"station-list\">\n      {gasStationList.map(gasStation => (\n        <StationRow key={gasStation.id} {...{ gasStation }} />\n      ))}\n    </div>\n  );\n};\n\nexport default StationList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { StationList } from \"./components\";\n\nclass GasStationList extends Component {\n  render() {\n    const { gasStationList } = this.props;\n\n    return (\n      <div id=\"gas-station-list\">\n        <StationList {...{ gasStationList }} />\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ gasStationList }) => {\n  return { ...gasStationList };\n};\n\nconst mapActionsToProps = {};\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationDetail } from \"actions/gasStationDetail\";\n\nclass GasStationDetail extends Component {\n  UNSAFE_componentWillMount = () => {};\n  componentDidMount = () => {\n    const {\n      match: {\n        params: { stationId }\n      }\n    } = this.props;\n    if (!!stationId) {\n      this.handleGetGasStationDetail(stationId);\n    }\n  };\n\n  handleGetGasStationDetail = stationId => {\n    const { getGasStationDetail } = this.props;\n\n    getGasStationDetail({ stationId });\n  };\n\n  render() {\n    return <div id=\"gas-station-detail\">Gas Station Detail</div>;\n  }\n}\n\nconst mapStatetoProps = ({ gasStationDetail }) => {\n  return { ...gasStationDetail };\n};\n\nconst mapActionsToProps = { getGasStationDetail };\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationDetail);\n","import { getGasStationDetailService } from \"services\";\nimport { DETAIL_ACTIONS, APP_ACTIONS } from \"./constants\";\n\nconst getGasStationDetail = params => {\n  return dispatch => {\n    dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: true } });\n\n    getGasStationDetailService(params)\n      .then(res => {\n        const { details, previousPrices } = res;\n\n        dispatch({ type: DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL, payload: { ...details, previousPrices } });\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      })\n      .catch(err => {});\n  };\n};\n\nexport { getGasStationDetail };\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"History\";\nimport { SearchLayout } from \"layouts\";\nimport GasStationList from \"page/GasStationList\";\nimport GasStationDetail from \"page/GasStationDetail\";\nimport \"./App.scss\";\n\nconst AppRoute = ({ page: Page, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      return (\n        <Layout {...props}>\n          <Page {...props} />\n        </Layout>\n      );\n    }}\n  ></Route>\n);\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <AppRoute exact path=\"/gas-price-app\" layout={SearchLayout} page={GasStationList}></AppRoute>\n        <AppRoute path=\"/gas-price-app/station/:stationId\" layout={SearchLayout} page={GasStationDetail}></AppRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { APP_ACTIONS } from \"actions/constants\";\n\nconst initialState = {\n  loading: false\n};\n\nconst app = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case APP_ACTIONS.UPDATE_LOADING: {\n      const { loading } = payload;\n      return { ...state, loading };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default app;\n","import { DETAIL_ACTIONS } from \"actions/constants\";\nconst initialState = {\n  gasStationDetail: {}\n};\n\nconst gasStationDetail = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL: {\n      const gasStationDetail = {\n        address: payload.address,\n        city: payload.city,\n        region: payload.region,\n        country: payload.country,\n        lat: payload.lat,\n        lng: payload.lng,\n        station_name: payload.station_name,\n        zip: payload.zip,\n        reg_price: payload.reg_price,\n        reg_date: payload.reg_date,\n        mid_price: payload.mid_price,\n        mid_date: payload.mid_date,\n        pre_price: payload.pre_price,\n        pre_date: payload.pre_date,\n        diesel_price: payload.diesel_price,\n        diesel_date: payload.diesel_date,\n        previousPrices: payload.previousPrices\n      };\n      return { ...state, gasStationDetail };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationDetail;\n","import { LIST_ACTIONS } from \"actions/constants\";\n\nconst initialState = {\n  gasStationList: []\n};\n\nconst gasStationList = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LIST_ACTIONS.UPDATE_GAS_STATION_LIST: {\n      return { ...state, gasStationList: payload.gasStationList };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationList;\n","import { combineReducers } from \"redux\";\nimport app from \"./app\";\nimport gasStationDetail from \"./gasStationDetail\";\nimport gasStationList from \"./gasStationList\";\n\nconst rootReducer = combineReducers({ app, gasStationDetail, gasStationList });\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"reducers\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}