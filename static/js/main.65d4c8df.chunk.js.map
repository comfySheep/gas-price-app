{"version":3,"sources":["History.js","tools/constants.js","tools/request.js","tools/helpers.js","services/index.js","actions/constants.js","components/Loading/index.js","components/StationCard/index.js","layouts/SearchLayout.js","actions/gasStationList.js","page/GasStationList/index.js","page/GasStationDetail/index.js","actions/gasStationDetail.js","App.js","reducers/app.js","reducers/gasStationDetail.js","reducers/gasStationList.js","reducers/index.js","store.js","index.js"],"names":["createBrowserHistory","basename","key","name","request","options","method","params","url","headers","toLowerCase","axios","get","Promise","reject","response","data","Status","message","fetch","then","resolve","catch","error","stationId","history","push","API_KEY","constants","DETAIL_ACTIONS","LIST_ACTIONS","APP_ACTIONS","Loading","loading","id","className","CLEAR_BIT_LOGO_URL","StationCard","props","gasStation","selectable","handleSelectStation","station","address","zip","reg_price","reg_date","mid_price","mid_date","pre_price","pre_date","diesel_price","diesel_date","distance","gasPrices","price","date","onClick","src","onError","err","target","style","display","alt","map","index","isNaN","SEARCH_SORT_OPTIONS","SEARCH_DISTANCE_OPTIONS","handleDisplaySearchStationList","SearchLayout","UNSAFE_componentWillMount","location","pathname","includes","handleSearchStations","handleUpdateSortBy","e","sortBy","value","setState","handleUpdateSearchDistance","searchDistance","navigator","geolocation","getCurrentPosition","handleGetGasStationList","code","alert","position","getGasStationList","state","coords","latitude","longitude","toFixed","fuelType","bind","this","searchDistanceOption","children","Component","mapActionsToProps","dispatch","type","payload","getGasStationsService","res","JSON","parse","substring","indexOf","stations","sliceIndex","Number","slice","gasStationList","connect","app","helpers","GasStationList","length","GasStationDetail","componentDidMount","match","handleGetGasStationDetail","getGasStationDetail","renderLocationToMap","loadScript","window","initMap","document","getElementsByTagName","script","createElement","async","defer","parentNode","appendChild","lat","lng","google","maps","Map","getElementById","marker","Marker","LatLng","setZoom","panTo","gasStationDetail","station_name","getGasStationDetailService","details","AppRoute","Page","page","Layout","layout","rest","render","App","exact","path","initialState","city","region","country","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","store"],"mappings":"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","file":"static/js/main.65d4c8df.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({ basename: \"\" });\n","export default {\n  API_KEY: \"rfej9napna.json\",\n  CLEAR_BIT_LOGO_URL: \"//logo.clearbit.com\",\n  SEARCH_SORT_OPTIONS: [\n    { key: \"distance\", name: \"Distance\" },\n    { key: \"price\", name: \"Price\" }\n  ],\n  SEARCH_DISTANCE_OPTIONS: [\"1\", \"3\", \"5\", \"10\", \"50\", \"100000\"]\n};\n","import axios from \"axios\";\n\nconst fetch = options => {\n  const { method = \"get\", params, url, headers } = options;\n  switch (method.toLowerCase()) {\n    case \"get\":\n      return axios.get(url, { params, headers });\n    default:\n      return Promise.reject({ response: { data: { Status: { message: \"This API method is not available\" } } } });\n  }\n};\n\nconst request = options => {\n  return fetch(options)\n    .then(response => {\n      const { data } = response;\n      return Promise.resolve(data);\n    })\n    .catch(error => {\n      const {\n        response: { data }\n      } = error;\n      return Promise.reject(data);\n    });\n};\n\nexport default request;\n","import history from \"History\";\n\nconst handleSelectStation = stationId => {\n  history.push(`/gas-price-app/station/${stationId}`);\n};\n\nconst handleDisplaySearchStationList = () => {\n  history.push(\"/gas-price-app\");\n};\n\nexport default { handleSelectStation, handleDisplaySearchStationList };\n","import { constants, request } from \"tools\";\n\nconst { API_KEY } = constants;\n\nexport function getGasStationsService(params) {\n  const { latitude, longitude, distance, fuelType, sortBy } = params;\n\n  return request({\n    url: `/stations/radius/${latitude}/${longitude}/${distance}/${fuelType}/${sortBy}/${API_KEY}`,\n    method: \"get\"\n  });\n}\n\nexport function getGasStationDetailService({ stationId }) {\n  return request({\n    url: `/stations/details/${stationId}/${API_KEY}`,\n    method: \"get\"\n  });\n}\n","const DETAIL_ACTIONS = {\n  UPDATE_GAS_STATION_DETAIL: \"UPDATE_GAS_STATION_DETAIL\"\n};\n\nconst LIST_ACTIONS = {\n  UPDATE_GAS_STATION_LIST: \"UPDATE_GAS_STATION_LIST\"\n};\n\nconst APP_ACTIONS = {\n  UPDATE_LOADING: \"UPDATE_LOADING\"\n};\n\nexport { DETAIL_ACTIONS, LIST_ACTIONS, APP_ACTIONS };\n","import React from \"react\";\n\nconst Loading = ({ loading }) => {\n  return <div id=\"loading\" className={`${!loading ? \"hidden\" : \"\"}`}></div>;\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { constants } from \"tools\";\n\nconst { CLEAR_BIT_LOGO_URL } = constants;\n\nconst StationCard = props => {\n  const { gasStation, selectable, handleSelectStation } = props;\n  const {\n    id,\n    station,\n    address,\n    zip,\n    reg_price,\n    reg_date,\n    mid_price,\n    mid_date,\n    pre_price,\n    pre_date,\n    diesel_price,\n    diesel_date,\n    distance\n  } = gasStation;\n  const gasPrices = [\n    { name: \"Regular\", price: reg_price, date: reg_date },\n    { name: \"Midgrade\", price: mid_price, date: mid_date },\n    { name: \"Premium\", price: pre_price, date: pre_date },\n    { name: \"Diesel\", price: diesel_price, date: diesel_date }\n  ];\n  return (\n    <div\n      className={selectable ? `station-card ${selectable}` : \"station-card\"}\n      onClick={handleSelectStation ? () => handleSelectStation(id) : null}\n    >\n      <div className=\"station-image\">\n        <img\n          src={`${CLEAR_BIT_LOGO_URL}/${station}.com`}\n          onError={err => (err.target.style.display = \"none\")}\n          alt={`logo-${station}`}\n        />\n      </div>\n      <div className=\"station-info\">\n        <div className=\"station-title\">\n          <h2 className={selectable ? \"station-address\" : \"station-address full-width\"}>\n            {station ? `${station} - ` : null}\n            {address}, {zip}\n          </h2>\n          {distance ? <div className=\"station-distance bold\">{distance}</div> : null}\n        </div>\n        {gasPrices.map(({ name, price, date }, index) => (\n          <div key={`station-price-container-${index}`} className=\"station-price-container\">\n            <div className=\"station-price\">{name}</div>\n            <div className=\"station-price bold\">{isNaN(price) ? price : `$${price}`}</div>\n            <div className=\"station-price\">{date}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default StationCard;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationList } from \"actions/gasStationList\";\nimport { constants, helpers } from \"tools\";\nimport { Loading } from \"components\";\n\nconst { SEARCH_SORT_OPTIONS, SEARCH_DISTANCE_OPTIONS } = constants;\nconst { handleDisplaySearchStationList } = helpers;\n\nclass SearchLayout extends Component {\n  constructor() {\n    super();\n\n    this.state = { sortBy: \"distance\", searchDistance: \"1\" };\n\n    this.handleUpdateSortBy = this.handleUpdateSortBy.bind(this);\n    this.handleUpdateSearchDistance = this.handleUpdateSearchDistance.bind(this);\n  }\n\n  UNSAFE_componentWillMount = () => {\n    const { location } = this.props;\n    const pathname = location ? location.pathname : \"\";\n\n    if (pathname.includes(\"station\")) return;\n\n    this.handleSearchStations();\n  };\n\n  handleUpdateSortBy = e => {\n    const sortBy = e.target.value;\n\n    this.setState({ sortBy }, this.handleSearchStations);\n  };\n\n  handleUpdateSearchDistance = e => {\n    const searchDistance = e.target.value;\n\n    this.setState({ searchDistance }, this.handleSearchStations);\n  };\n\n  handleSearchStations = () => {\n    navigator.geolocation.getCurrentPosition(this.handleGetGasStationList, error => {\n      const { code, message } = error;\n      alert(`ERROR ${code}: ${message}`);\n    });\n  };\n\n  handleGetGasStationList = position => {\n    const { getGasStationList } = this.props;\n    const { sortBy, searchDistance } = this.state;\n    const { latitude, longitude } = (position && position.coords) || { latitude: 32.9596, longitude: -117.1578 };\n    const params = {\n      latitude: latitude.toFixed(3),\n      longitude: longitude.toFixed(3),\n      distance: searchDistance,\n      fuelType: \"reg\",\n      sortBy\n    };\n\n    getGasStationList(params).then(() => {\n      handleDisplaySearchStationList();\n    });\n  };\n\n  render() {\n    const { loading } = this.props;\n    const { sortBy, searchDistance } = this.state;\n    return (\n      <Fragment>\n        <div id=\"search-layout\">\n          <div id=\"sort-buttons-container\">\n            <span>Sort By: </span>\n            {SEARCH_SORT_OPTIONS.map(({ key, name }) => (\n              <button\n                className={`${sortBy === key ? \"btn active\" : \"btn\"}`}\n                key={`search-sort-option-${key}`}\n                value={key}\n                onClick={this.handleUpdateSortBy}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <div id=\"distance-buttons-container\">\n            <span>Within: </span>\n            {SEARCH_DISTANCE_OPTIONS.map(searchDistanceOption => {\n              return (\n                <button\n                  className={`${searchDistance === searchDistanceOption ? \"btn active\" : \"btn\"}`}\n                  key={`search-distance-option-${searchDistanceOption}`}\n                  value={searchDistanceOption}\n                  onClick={this.handleUpdateSearchDistance}\n                >\n                  {searchDistanceOption} {searchDistanceOption === \"1\" ? \"mile\" : \"miles\"}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <Loading {...{ loading }} />\n        <div\n          id=\"search-content-container\"\n          className={`${loading ? \"hidden search-content-container\" : \"search-content-container\"}`}\n        >\n          {this.props.children}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ app }) => ({ ...app });\n\nconst mapActionsToProps = { getGasStationList };\n\nexport default connect(\n  mapStatetoProps,\n  mapActionsToProps\n)(SearchLayout);\n","import { getGasStationsService } from \"services\";\nimport { LIST_ACTIONS, APP_ACTIONS } from \"./constants\";\n\nconst getGasStationList = params => {\n  return dispatch => {\n    dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: true } });\n\n    return getGasStationsService(params)\n      .then(res => {\n        if (typeof res !== \"object\") {\n          res = JSON.parse(res.substring(res.indexOf('{\"status\":{\"error\":')));\n        }\n\n        const { sortBy } = params;\n        let { stations } = res;\n        if (sortBy === \"price\") {\n          let sliceIndex = 0;\n          for (let index in stations) {\n            const station = stations[index];\n            if (!isNaN(Number(station.reg_price))) {\n              sliceIndex = index;\n              break;\n            }\n          }\n          stations = stations.slice(sliceIndex);\n        }\n        dispatch({ type: LIST_ACTIONS.UPDATE_GAS_STATION_LIST, payload: { gasStationList: stations } });\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      })\n      .catch(err => {\n        const { message } = (err && err.Status) || {};\n        alert(message);\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      });\n  };\n};\n\nexport { getGasStationList };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { StationCard } from \"components\";\nimport { helpers } from \"tools\";\n\nconst { handleSelectStation } = helpers;\n\nclass GasStationList extends Component {\n  render() {\n    const { gasStationList } = this.props;\n\n    if (gasStationList.length === 0) return \"There are no gas station near you...\";\n\n    return (\n      <div className=\"gas-station-list\">\n        {gasStationList.map(gasStation => (\n          <StationCard key={gasStation.id} {...{ gasStation, handleSelectStation, selectable: \"selectable\" }} />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ gasStationList }) => {\n  return { ...gasStationList };\n};\n\nconst mapActionsToProps = {};\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationDetail } from \"actions/gasStationDetail\";\nimport { StationCard } from \"components\";\n\nclass GasStationDetail extends Component {\n  componentDidMount = () => {\n    const {\n      match: {\n        params: { stationId }\n      }\n    } = this.props;\n    if (!!stationId) {\n      this.handleGetGasStationDetail(stationId);\n    }\n  };\n\n  handleGetGasStationDetail = stationId => {\n    const { getGasStationDetail } = this.props;\n\n    getGasStationDetail({ stationId });\n  };\n\n  renderLocationToMap = location => {\n    const mapKey = \"AIzaSyCQMfTi3tCDb9SvQewB2v0OWgVyWzkFn9k\";\n    this.loadScript(`https://maps.googleapis.com/maps/api/js?key=${mapKey}&callback=initMap`);\n    window.initMap = this.initMap.bind(this, location);\n  };\n\n  loadScript = url => {\n    const index = document.getElementsByTagName(\"script\")[0];\n    const script = document.createElement(\"script\");\n    script.src = url;\n    script.async = true;\n    script.defer = true;\n    index.parentNode.appendChild(script);\n  };\n\n  initMap = location => {\n    const { lat, lng } = location;\n    const map = new window.google.maps.Map(document.getElementById(\"map\"));\n    const marker = new window.google.maps.Marker({\n      position: new window.google.maps.LatLng(lat, lng),\n      map\n    });\n    map.setZoom(12);\n    map.panTo(marker.position);\n  };\n\n  render() {\n    const { gasStationDetail } = this.props;\n    const { lat, lng } = gasStationDetail;\n\n    if (lat && lng) {\n      const location = { lat, lng };\n      this.renderLocationToMap(location);\n    }\n\n    return (\n      <div id=\"gas-station-detail\">\n        <div id=\"map\" />\n        <StationCard {...{ gasStation: { ...gasStationDetail, station: gasStationDetail.station_name } }} />\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ gasStationDetail }) => {\n  return { ...gasStationDetail };\n};\n\nconst mapActionsToProps = { getGasStationDetail };\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationDetail);\n","import { getGasStationDetailService } from \"services\";\nimport { DETAIL_ACTIONS, APP_ACTIONS } from \"./constants\";\n\nconst getGasStationDetail = params => {\n  return dispatch => {\n    dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: true } });\n\n    getGasStationDetailService(params)\n      .then(res => {\n        const { details } = res;\n\n        dispatch({ type: DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL, payload: { ...details } });\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      })\n      .catch(err => {\n        const { message } = (err && err.Status) || {};\n\n        alert(message);\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      });\n  };\n};\n\nexport { getGasStationDetail };\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"History\";\nimport { SearchLayout } from \"layouts\";\nimport GasStationList from \"page/GasStationList\";\nimport GasStationDetail from \"page/GasStationDetail\";\nimport \"styles/index.scss\";\n\nconst AppRoute = ({ page: Page, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      return (\n        <Layout {...props}>\n          <Page {...props} />\n        </Layout>\n      );\n    }}\n  ></Route>\n);\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <AppRoute exact path=\"/gas-price-app\" layout={SearchLayout} page={GasStationList}></AppRoute>\n        <AppRoute path=\"/gas-price-app/station/:stationId\" layout={SearchLayout} page={GasStationDetail}></AppRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { APP_ACTIONS } from \"actions/constants\";\n\nconst initialState = {\n  loading: false\n};\n\nconst app = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case APP_ACTIONS.UPDATE_LOADING: {\n      const { loading } = payload;\n      return { ...state, loading };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default app;\n","import { DETAIL_ACTIONS } from \"actions/constants\";\nconst initialState = {\n  gasStationDetail: {}\n};\n\nconst gasStationDetail = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL: {\n      const gasStationDetail = {\n        address: payload.address || \"\",\n        city: payload.city || \"\",\n        region: payload.region || \"\",\n        country: payload.country || \"\",\n        lat: payload.lat || \"\",\n        lng: payload.lng || \"\",\n        station_name: payload.station_name || \"\",\n        zip: payload.zip || \"\",\n        reg_price: payload.reg_price || \"\",\n        reg_date: payload.reg_date || \"\",\n        mid_price: payload.mid_price || \"\",\n        mid_date: payload.mid_date || \"\",\n        pre_price: payload.pre_price || \"\",\n        pre_date: payload.pre_date || \"\",\n        diesel_price: payload.diesel_price || \"\",\n        diesel_date: payload.diesel_date || \"\"\n      };\n      return { ...state, gasStationDetail };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationDetail;\n","import { LIST_ACTIONS } from \"actions/constants\";\n\nconst initialState = {\n  gasStationList: []\n};\n\nconst gasStationList = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LIST_ACTIONS.UPDATE_GAS_STATION_LIST: {\n      return { ...state, gasStationList: payload.gasStationList };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationList;\n","import { combineReducers } from \"redux\";\nimport app from \"./app\";\nimport gasStationDetail from \"./gasStationDetail\";\nimport gasStationList from \"./gasStationList\";\n\nconst rootReducer = combineReducers({ app, gasStationDetail, gasStationList });\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"reducers\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}