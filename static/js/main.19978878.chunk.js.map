{"version":3,"sources":["History.js","tools/constants.js","tools/request.js","tools/helpers.js","services/index.js","actions/constants.js","components/Loading/index.js","layouts/SearchLayout.js","actions/gasStationList.js","page/GasStationList/components/StationList/components/StationRow.js","page/GasStationList/components/StationList/index.js","page/GasStationList/index.js","page/GasStationDetail/index.js","actions/gasStationDetail.js","App.js","reducers/app.js","reducers/gasStationDetail.js","reducers/gasStationList.js","reducers/index.js","store.js","index.js"],"names":["createBrowserHistory","basename","key","name","request","options","method","params","url","headers","toLowerCase","axios","get","fetch","then","response","data","Promise","resolve","catch","error","reject","stationId","history","push","API_KEY","constants","DETAIL_ACTIONS","LIST_ACTIONS","APP_ACTIONS","Loading","loading","id","className","SEARCH_SORT_OPTIONS","SEARCH_DISTANCE_OPTIONS","handleDisplaySearchStationList","SearchLayout","UNSAFE_componentWillMount","location","props","pathname","includes","handleSearchStations","handleUpdateSortBy","e","sortBy","target","value","setState","handleUpdateSearchDistance","searchDistance","navigator","geolocation","getCurrentPosition","handleGetGasStationList","position","getGasStationList","state","coords","latitude","longitude","toFixed","distance","fuelType","bind","this","map","onClick","searchDistanceOption","children","Component","mapActionsToProps","dispatch","type","payload","getGasStationsService","res","JSON","parse","substring","indexOf","stations","sliceIndex","index","station","isNaN","Number","reg_price","slice","gasStationList","err","message","Status","alert","connect","app","handleSelectStation","helpers","CLEAR_BIT_LOGO_URL","StationRow","gasStation","address","zip","mid_price","pre_price","diesel_price","src","onError","style","display","alt","StationList","length","GasStationList","GasStationDetail","componentDidMount","match","handleGetGasStationDetail","getGasStationDetail","renderLocationToMap","loadScript","window","initMap","document","getElementsByTagName","script","createElement","async","defer","parentNode","appendChild","lat","lng","google","maps","Map","getElementById","bounds","LatLngBounds","marker","Marker","LatLng","extend","fitBounds","gasStationDetail","station_name","reg_date","mid_date","pre_date","diesel_date","getGasStationDetailService","details","AppRoute","Page","page","Layout","layout","rest","render","App","exact","path","initialState","city","region","country","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","store"],"mappings":"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","file":"static/js/main.19978878.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({ basename: \"\" });\n","export default {\n  API_KEY: \"rfej9napna.json\",\n  CLEAR_BIT_LOGO_URL: \"//logo.clearbit.com\",\n  SEARCH_SORT_OPTIONS: [\n    { key: \"distance\", name: \"Distance\" },\n    { key: \"price\", name: \"Price\" }\n  ],\n  SEARCH_DISTANCE_OPTIONS: [\"1\", \"3\", \"5\", \"10\", \"50\", \"100000\"]\n};\n","import axios from \"axios\";\n\nconst fetch = options => {\n  const { method = \"get\", params, url, headers } = options;\n  switch (method.toLowerCase()) {\n    case \"get\":\n      return axios.get(url, { params, headers });\n    default:\n      return axios(options);\n  }\n};\n\nconst request = options => {\n  return fetch(options)\n    .then(response => {\n      const { data } = response;\n      return Promise.resolve(data);\n    })\n    .catch(error => {\n      const {\n        response: { data }\n      } = error;\n      return Promise.reject(data);\n    });\n};\n\nexport default request;\n","import history from \"History\";\n\nconst handleSelectStation = stationId => {\n  history.push(`/gas-price-app/station/${stationId}`);\n};\n\nconst handleDisplaySearchStationList = () => {\n  history.push(\"/gas-price-app\");\n};\n\nexport default { handleSelectStation, handleDisplaySearchStationList };\n","import { constants, request } from \"tools\";\n\nconst { API_KEY } = constants;\n\nexport function getGasStationsService(params) {\n  const { latitude, longitude, distance, fuelType, sortBy } = params;\n\n  return request({\n    url: `/stations/radius/${latitude}/${longitude}/${distance}/${fuelType}/${sortBy}/${API_KEY}`,\n    method: \"get\"\n  });\n}\n\nexport function getGasStationDetailService({ stationId }) {\n  return request({\n    url: `/stations/details/${stationId}/${API_KEY}`,\n    method: \"get\"\n  });\n}\n","const DETAIL_ACTIONS = {\n  UPDATE_GAS_STATION_DETAIL: \"UPDATE_GAS_STATION_DETAIL\"\n};\n\nconst LIST_ACTIONS = {\n  UPDATE_GAS_STATION_LIST: \"UPDATE_GAS_STATION_LIST\"\n};\n\nconst APP_ACTIONS = {\n  UPDATE_LOADING: \"UPDATE_LOADING\"\n};\n\nexport { DETAIL_ACTIONS, LIST_ACTIONS, APP_ACTIONS };\n","import React from \"react\";\n\nconst Loading = ({ loading }) => {\n  return <div id=\"loading\" className={`${!loading ? \"hidden\" : \"\"}`}></div>;\n};\n\nexport default Loading;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationList } from \"actions/gasStationList\";\nimport { constants, helpers } from \"tools\";\nimport { Loading } from \"components\";\n\nconst { SEARCH_SORT_OPTIONS, SEARCH_DISTANCE_OPTIONS } = constants;\nconst { handleDisplaySearchStationList } = helpers;\n\nclass SearchLayout extends Component {\n  constructor() {\n    super();\n\n    this.state = { sortBy: \"distance\", searchDistance: \"1\" };\n\n    this.handleUpdateSortBy = this.handleUpdateSortBy.bind(this);\n    this.handleUpdateSearchDistance = this.handleUpdateSearchDistance.bind(this);\n  }\n\n  UNSAFE_componentWillMount = () => {\n    const { location } = this.props;\n    const pathname = location ? location.pathname : \"\";\n\n    if (pathname.includes(\"station\")) return;\n\n    this.handleSearchStations();\n  };\n\n  handleUpdateSortBy = e => {\n    const sortBy = e.target.value;\n\n    this.setState({ sortBy });\n    this.handleSearchStations();\n  };\n\n  handleUpdateSearchDistance = e => {\n    const searchDistance = e.target.value;\n\n    this.setState({ searchDistance });\n    this.handleSearchStations();\n  };\n\n  handleSearchStations = () => {\n    navigator.geolocation.getCurrentPosition(this.handleGetGasStationList, () => {});\n  };\n\n  handleGetGasStationList = position => {\n    const { getGasStationList } = this.props;\n    const { sortBy, searchDistance } = this.state;\n    const { latitude, longitude } = (position && position.coords) || { latitude: 32.9596, longitude: -117.1578 };\n    const params = {\n      latitude: latitude.toFixed(3),\n      longitude: longitude.toFixed(3),\n      distance: searchDistance,\n      fuelType: \"reg\",\n      sortBy\n    };\n\n    getGasStationList(params);\n    handleDisplaySearchStationList();\n  };\n\n  render() {\n    const { loading } = this.props;\n    const { sortBy, searchDistance } = this.state;\n    return (\n      <Fragment>\n        <div id=\"search-layout\">\n          <div id=\"sort-buttons-container\">\n            <span>Sort By: </span>\n            {SEARCH_SORT_OPTIONS.map(({ key, name }) => (\n              <button\n                className={`${sortBy === key ? \"btn active\" : \"btn\"}`}\n                key={`search-sort-option-${key}`}\n                value={key}\n                onClick={this.handleUpdateSortBy}\n              >\n                {name}\n              </button>\n            ))}\n          </div>\n          <div id=\"distance-buttons-container\">\n            <span>Within: </span>\n            {SEARCH_DISTANCE_OPTIONS.map(searchDistanceOption => {\n              return (\n                <button\n                  className={`${searchDistance === searchDistanceOption ? \"btn active\" : \"btn\"}`}\n                  key={`search-distance-option-${searchDistanceOption}`}\n                  value={searchDistanceOption}\n                  onClick={this.handleUpdateSearchDistance}\n                >\n                  {searchDistanceOption} {searchDistanceOption === \"1\" ? \"mile\" : \"miles\"}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <Loading {...{ loading }} />\n        <div\n          id=\"search-content-container\"\n          className={`${loading ? \"hidden search-content-container\" : \"search-content-container\"}`}\n        >\n          {this.props.children}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ app }) => ({ ...app });\n\nconst mapActionsToProps = { getGasStationList };\n\nexport default connect(mapStatetoProps, mapActionsToProps)(SearchLayout);\n","import { getGasStationsService } from \"services\";\nimport { LIST_ACTIONS, APP_ACTIONS } from \"./constants\";\n\nconst getGasStationList = params => {\n  return dispatch => {\n    dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: true } });\n\n    getGasStationsService(params)\n      .then(res => {\n        if (typeof res !== \"object\") {\n          res = JSON.parse(res.substring(res.indexOf('{\"status\":{\"error\":')));\n        }\n\n        const { sortBy } = params;\n        let { stations } = res;\n        if (sortBy === \"price\") {\n          let sliceIndex = 0;\n          for (let index in stations) {\n            const station = stations[index];\n            if (!isNaN(Number(station.reg_price))) {\n              sliceIndex = index;\n              break;\n            }\n          }\n          stations = stations.slice(sliceIndex);\n        }\n        dispatch({ type: LIST_ACTIONS.UPDATE_GAS_STATION_LIST, payload: { gasStationList: stations } });\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      })\n      .catch(err => {\n        const { message } = (err && err.Status) || {};\n        alert(message);\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      });\n  };\n};\n\nexport { getGasStationList };\n","import React, { Fragment } from \"react\";\nimport { helpers, constants } from \"tools\";\n\nconst { handleSelectStation } = helpers;\nconst { CLEAR_BIT_LOGO_URL } = constants;\n\nconst StationRow = props => {\n  const { gasStation } = props;\n  const { id, station, address, zip, reg_price, mid_price, pre_price, diesel_price, distance } = gasStation;\n  return (\n    <div className=\"generic-row\" onClick={() => handleSelectStation(id)}>\n      {station ? (\n        <Fragment>\n          <img\n            src={`${CLEAR_BIT_LOGO_URL}/${station}.com`}\n            onError={err => (err.target.style.display = \"none\")}\n            alt={`logo-${station}`}\n          />\n          <div className=\"station_name\">{station}</div>\n        </Fragment>\n      ) : null}\n      <div className=\"station-address\">\n        {address}, {zip}\n      </div>\n      <div className=\"station-price station-reg-price\">Regular - {reg_price}</div>\n      <div className=\"station-price station-mid-price\">Medium - {mid_price}</div>\n      <div className=\"station-price station-pre-price\">Premium - {pre_price}</div>\n      <div className=\"station-price station-diesel-price\">Diesel - {diesel_price}</div>\n      <div className=\"station-distance\">Distance - {distance}</div>\n    </div>\n  );\n};\n\nexport default StationRow;\n","import React from \"react\";\nimport { StationRow } from \"./components\";\n\nconst StationList = props => {\n  const { gasStationList } = props;\n\n  if (gasStationList.length === 0) return \"There are no gas station near you...\";\n\n  return (\n    <div className=\"station-list\">\n      {gasStationList.map(gasStation => (\n        <StationRow key={gasStation.id} {...{ gasStation }} />\n      ))}\n    </div>\n  );\n};\n\nexport default StationList;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { StationList } from \"./components\";\n\nclass GasStationList extends Component {\n  render() {\n    const { gasStationList } = this.props;\n\n    return (\n      <div id=\"gas-station-list\">\n        <StationList {...{ gasStationList }} />\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ gasStationList }) => {\n  return { ...gasStationList };\n};\n\nconst mapActionsToProps = {};\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationDetail } from \"actions/gasStationDetail\";\n\nclass GasStationDetail extends Component {\n  componentDidMount = () => {\n    const {\n      match: {\n        params: { stationId }\n      }\n    } = this.props;\n    if (!!stationId) {\n      this.handleGetGasStationDetail(stationId);\n    }\n  };\n\n  handleGetGasStationDetail = stationId => {\n    const { getGasStationDetail } = this.props;\n\n    getGasStationDetail({ stationId });\n  };\n\n  renderLocationToMap = location => {\n    const mapKey = \"AIzaSyCQMfTi3tCDb9SvQewB2v0OWgVyWzkFn9k\";\n    this.loadScript(`https://maps.googleapis.com/maps/api/js?key=${mapKey}&callback=initMap`);\n    window.initMap = this.initMap.bind(this, location);\n  };\n\n  loadScript = url => {\n    const index = document.getElementsByTagName(\"script\")[0];\n    const script = document.createElement(\"script\");\n    script.src = url;\n    script.async = true;\n    script.defer = true;\n    index.parentNode.appendChild(script);\n  };\n\n  initMap = location => {\n    const { lat, lng } = location;\n    const map = new window.google.maps.Map(document.getElementById(\"map\"));\n    const bounds = new window.google.maps.LatLngBounds();\n    const marker = new window.google.maps.Marker({\n      position: new window.google.maps.LatLng(lat, lng),\n      map\n    });\n\n    bounds.extend(marker.position);\n    map.fitBounds(bounds);\n  };\n\n  render() {\n    const {\n      station_name,\n      address,\n      zip,\n      reg_price,\n      reg_date,\n      mid_price,\n      mid_date,\n      pre_price,\n      pre_date,\n      diesel_price,\n      diesel_date,\n      lat,\n      lng\n    } = this.props.gasStationDetail;\n\n    if (lat && lng) {\n      const location = { lat, lng };\n      this.renderLocationToMap(location);\n    }\n\n    return (\n      <div id=\"gas-station-detail\">\n        <div id=\"map\" />\n        <div className=\"station_name\">{station_name}</div>\n        <div className=\"station-address\">\n          {address}, {zip}\n        </div>\n        <div className=\"station-price station-reg-price\">Regular - {reg_price}</div>\n        <div className=\"station-price-date station-reg-price-date\">{reg_date}</div>\n        <div className=\"station-price station-mid-price\">Medium - {mid_price}</div>\n        <div className=\"station-price-date station-mid-price-date\">{mid_date}</div>\n        <div className=\"station-price station-pre-price\">Premium - {pre_price}</div>\n        <div className=\"station-price-date station-pre-price-date\">{pre_date}</div>\n        <div className=\"station-price station-diesel-price\">Diesel - {diesel_price}</div>\n        <div className=\"station-price-date station-diesel-price-date\">{diesel_date}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = ({ gasStationDetail }) => {\n  return { ...gasStationDetail };\n};\n\nconst mapActionsToProps = { getGasStationDetail };\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationDetail);\n","import { getGasStationDetailService } from \"services\";\nimport { DETAIL_ACTIONS, APP_ACTIONS } from \"./constants\";\n\nconst getGasStationDetail = params => {\n  return dispatch => {\n    dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: true } });\n\n    getGasStationDetailService(params)\n      .then(res => {\n        const { details } = res;\n\n        dispatch({ type: DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL, payload: { ...details } });\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      })\n      .catch(err => {\n        const { message } = (err && err.Status) || {};\n        alert(message);\n        dispatch({ type: APP_ACTIONS.UPDATE_LOADING, payload: { loading: false } });\n      });\n  };\n};\n\nexport { getGasStationDetail };\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"History\";\nimport { SearchLayout } from \"layouts\";\nimport GasStationList from \"page/GasStationList\";\nimport GasStationDetail from \"page/GasStationDetail\";\nimport \"styles/index.scss\";\n\nconst AppRoute = ({ page: Page, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      return (\n        <Layout {...props}>\n          <Page {...props} />\n        </Layout>\n      );\n    }}\n  ></Route>\n);\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <AppRoute exact path=\"/gas-price-app\" layout={SearchLayout} page={GasStationList}></AppRoute>\n        <AppRoute path=\"/gas-price-app/station/:stationId\" layout={SearchLayout} page={GasStationDetail}></AppRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { APP_ACTIONS } from \"actions/constants\";\n\nconst initialState = {\n  loading: false\n};\n\nconst app = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case APP_ACTIONS.UPDATE_LOADING: {\n      const { loading } = payload;\n      return { ...state, loading };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default app;\n","import { DETAIL_ACTIONS } from \"actions/constants\";\nconst initialState = {\n  gasStationDetail: {}\n};\n\nconst gasStationDetail = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL: {\n      const gasStationDetail = {\n        address: payload.address,\n        city: payload.city,\n        region: payload.region,\n        country: payload.country,\n        lat: payload.lat,\n        lng: payload.lng,\n        station_name: payload.station_name,\n        zip: payload.zip,\n        reg_price: payload.reg_price,\n        reg_date: payload.reg_date,\n        mid_price: payload.mid_price,\n        mid_date: payload.mid_date,\n        pre_price: payload.pre_price,\n        pre_date: payload.pre_date,\n        diesel_price: payload.diesel_price,\n        diesel_date: payload.diesel_date\n      };\n      return { ...state, gasStationDetail };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationDetail;\n","import { LIST_ACTIONS } from \"actions/constants\";\n\nconst initialState = {\n  gasStationList: []\n};\n\nconst gasStationList = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LIST_ACTIONS.UPDATE_GAS_STATION_LIST: {\n      return { ...state, gasStationList: payload.gasStationList };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationList;\n","import { combineReducers } from \"redux\";\nimport app from \"./app\";\nimport gasStationDetail from \"./gasStationDetail\";\nimport gasStationList from \"./gasStationList\";\n\nconst rootReducer = combineReducers({ app, gasStationDetail, gasStationList });\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"reducers\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}