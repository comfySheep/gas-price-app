{"version":3,"sources":["History.js","layouts/SearchLayout.js","tools/request.js","actions/constants.js","page/GasStationList/index.js","actions/gasStationList.js","services/index.js","tools/constants.js","page/GasStationDetail/index.js","actions/gasStationDetail.js","App.js","reducers/gasStationDetail.js","reducers/gasStationList.js","reducers/index.js","store.js","index.js"],"names":["createBrowserHistory","basename","SearchLayout","props","children","request","options","method","params","url","headers","Accept","toLowerCase","axios","get","fetch","then","response","data","Promise","resolve","catch","error","reject","DETAIL_ACTIONS","LIST_ACTIONS","ACTIONS","GasStationList","componentDidMount","navigator","geolocation","getCurrentPosition","handleGetGasStationList","position","getGasStationList","coords","latitude","longitude","toFixed","distance","fuelType","sortBy","id","Component","mapActionsToProps","dispatch","getGasStationsService","res","JSON","parse","substring","indexOf","stations","type","payload","gasStationList","err","connect","GasStationDetail","stationId","match","handleGetGasStationDetail","getGasStationDetail","getGasStationDetailService","details","previousPrices","gasStationDetail","AppRoute","Page","page","Layout","layout","rest","render","App","history","exact","path","initialState","state","address","city","region","country","lat","lng","station_name","zip","reg_price","reg_date","mid_price","mid_date","pre_price","pre_date","diesel_price","diesel_date","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.30516750.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory({ basename: \"\" });\n","import React, { Fragment } from \"react\";\n\nconst SearchLayout = props => {\n  return <Fragment>{props.children}</Fragment>;\n};\n\nexport default SearchLayout;\n","import axios from \"axios\";\n\nconst fetch = options => {\n  const { method = \"get\", params, url, headers = { Accept: \"*/*\" } } = options;\n  switch (method.toLowerCase()) {\n    case \"get\":\n      return axios.get(url, { params, headers });\n    default:\n      return axios(options);\n  }\n};\n\nconst request = options => {\n  return fetch(options)\n    .then(response => {\n      const { data } = response;\n      return Promise.resolve(data);\n    })\n    .catch(error => {\n      const {\n        response: { data }\n      } = error;\n      return Promise.reject(data);\n    });\n};\nexport default request;\n","const DETAIL_ACTIONS = {\n  UPDATE_GAS_STATION_DETAIL: \"UPDATE_GAS_STATION_DETAIL\"\n};\n\nconst LIST_ACTIONS = {\n  UPDATE_GAS_STATION_LIST: \"UPDATE_GAS_STATION_LIST\"\n};\n\nconst ACTIONS = {\n  UPDATE_STATE: \"UPDATE_STATE\"\n};\n\nexport { DETAIL_ACTIONS, LIST_ACTIONS, ACTIONS };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationList } from \"actions/gasStationList\";\nclass GasStationList extends Component {\n  componentDidMount = () => {\n    navigator.geolocation.getCurrentPosition(this.handleGetGasStationList, () => {});\n  };\n  handleGetGasStationList = position => {\n    const { getGasStationList } = this.props;\n    const { latitude, longitude } = (position && position.coords) || { latitude: 32.9596, longitude: -117.1578 };\n    const params = {\n      latitude: latitude.toFixed(3),\n      longitude: longitude.toFixed(3),\n      distance: 1,\n      fuelType: \"reg\",\n      sortBy: \"price\"\n    };\n    getGasStationList(params);\n  };\n  render() {\n    return <div id=\"gas-station-list\">Gas Station Detail</div>;\n  }\n}\nconst mapStatetoProps = ({ gasStationList }) => {\n  return { ...gasStationList };\n};\n\nconst mapActionsToProps = { getGasStationList };\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationList);\n","import { getGasStationsService } from \"services\";\nimport { LIST_ACTIONS } from \"./constants\";\n\nconst getGasStationList = params => {\n  return dispatch => {\n    getGasStationsService(params)\n      .then(res => {\n        if (typeof res !== \"object\") {\n          res = JSON.parse(res.substring(res.indexOf('{\"status\":{\"error\":')));\n        }\n        const { stations } = res;\n        dispatch({ type: LIST_ACTIONS.UPDATE_GAS_STATION_LIST, payload: { gasStationList: stations } });\n      })\n      .catch(err => {});\n  };\n};\n\nexport { getGasStationList };\n","import { constants, request } from \"tools\";\nconst { apiKey } = constants;\n\nexport function getGasStationsService(params) {\n  const { latitude, longitude, distance, fuelType, sortBy } = params;\n  /* return fetch(`/stations/radius/${latitude}/${longitude}/${distance}/${fuelType}/${sortBy}/${apiKey}`); */\n  return request({\n    url: `/stations/radius/${latitude}/${longitude}/${distance}/${fuelType}/${sortBy}/${apiKey}`,\n    method: \"get\"\n  });\n}\n\nexport function getGasStationDetailService({ stationId }) {\n  return request({\n    url: `/stations/details/${stationId}/${apiKey}`,\n    method: \"get\"\n  });\n}\n","export default {\n  title: \"Gas Price App\",\n  apiKey: \"rfej9napna.json\"\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getGasStationDetail } from \"actions/gasStationDetail\";\nclass GasStationDetail extends Component {\n  componentDidMount = () => {\n    const {\n      match: {\n        params: { stationId }\n      }\n    } = this.props;\n    if (!!stationId) {\n      this.handleGetGasStationDetail(stationId);\n    }\n  };\n  handleGetGasStationDetail = stationId => {\n    const { getGasStationDetail } = this.props;\n    getGasStationDetail({ stationId });\n  };\n  render() {\n    return <div id=\"gas-station-detail\">Gas Station Detail</div>;\n  }\n}\nconst mapStatetoProps = ({ gasStationDetail }) => {\n  return { ...gasStationDetail };\n};\n\nconst mapActionsToProps = { getGasStationDetail };\n\nexport default connect(mapStatetoProps, mapActionsToProps)(GasStationDetail);\n","import { getGasStationDetailService } from \"services\";\nimport { DETAIL_ACTIONS } from \"./constants\";\n\nconst getGasStationDetail = params => {\n  return dispatch => {\n    getGasStationDetailService(params)\n      .then(res => {\n        const { details, previousPrices } = res;\n        dispatch({ type: DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL, payload: { ...details, previousPrices } });\n      })\n      .catch(err => {});\n  };\n};\n\nexport { getGasStationDetail };\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"History\";\nimport { SearchLayout } from \"layouts\";\nimport GasStationList from \"page/GasStationList\";\nimport GasStationDetail from \"page/GasStationDetail\";\n\nconst AppRoute = ({ page: Page, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      return (\n        <Layout>\n          <Page {...props} />\n        </Layout>\n      );\n    }}\n  ></Route>\n);\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <AppRoute exact path=\"/gas-price-app\" layout={SearchLayout} page={GasStationList}></AppRoute>\n        <AppRoute path=\"/gas-price-app/station/:stationId\" layout={SearchLayout} page={GasStationDetail}></AppRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { DETAIL_ACTIONS, ACTIONS } from \"actions/constants\";\nconst initialState = {\n  gasStationDetail: {}\n};\n\nconst gasStationDetail = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case DETAIL_ACTIONS.UPDATE_GAS_STATION_DETAIL: {\n      const gasStationDetail = {\n        address: payload.address,\n        city: payload.city,\n        region: payload.region,\n        country: payload.country,\n        lat: payload.lat,\n        lng: payload.lng,\n        station_name: payload.station_name,\n        zip: payload.zip,\n        reg_price: payload.reg_price,\n        reg_date: payload.reg_date,\n        mid_price: payload.mid_price,\n        mid_date: payload.mid_date,\n        pre_price: payload.pre_price,\n        pre_date: payload.pre_date,\n        diesel_price: payload.diesel_price,\n        diesel_date: payload.diesel_date,\n        previousPrices: payload.previousPrices\n      };\n      return { ...state, gasStationDetail };\n    }\n    case ACTIONS.UPDATE_STATE: {\n      return { ...state, ...payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationDetail;\n","import { LIST_ACTIONS, ACTIONS } from \"actions/constants\";\n\nconst initialState = {\n  gasStationList: []\n};\n\nconst gasStationList = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LIST_ACTIONS.UPDATE_GAS_STATION_LIST: {\n      return { ...state, gasStationList: payload.gasStationList };\n    }\n    case ACTIONS.UPDATE_STATE: {\n      return { ...state, ...payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default gasStationList;\n","import { combineReducers } from \"redux\";\nimport gasStationDetail from \"./gasStationDetail\";\nimport gasStationList from \"./gasStationList\";\n\nconst rootReducer = combineReducers({ gasStationDetail, gasStationList });\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"reducers\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}